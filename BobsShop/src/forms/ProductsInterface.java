package forms;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import data.*;
import elements.*;
import graphics.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import models.*;

/**
 * <pre> 
 * The ProductsInterface class.
 * </pre>
 * 
 * @author Miccio,reviewed and documented by Yin.
 * @version 1.0
 * @see javax.swing.JPanel
 * @see models.ProductsTableModel
 * @see data
 * @see elements.Product
 * @see graphics
 * 
 */

public class ProductsInterface extends javax.swing.JPanel
{

	private final ProductsTableModel tmodel;
	private final TableRowSorter<ProductsTableModel> sort;
	private JFrame frame = null;
	private DataConnection conn = null;
	private Customer stock = null;

	/**
	 * Creates new form Product Interface
	 *
	 * @param frame JFrame
         * @param conn DataConnection
	 */
        
	public ProductsInterface(JFrame frame, DataConnection conn)
	{
		this.frame = frame;
		this.conn = conn;
		initComponents();

		tmodel = new ProductsTableModel(conn);
		sort = new TableRowSorter<>(tmodel);

		productsTable.setModel(tmodel);
		productsTable.setRowSorter(sort);
		productsTable.getColumnModel().getColumn(5).setMinWidth(0);
		productsTable.getColumnModel().getColumn(5).setMaxWidth(0);
		productsTable.getColumnModel().getColumn(5).setPreferredWidth(0);

		TableColumnModel cmodel = productsTable.getColumnModel();
		cmodel.getColumn(0).setCellRenderer(new ProductsTableRendererCode());
		cmodel.getColumn(1).setCellRenderer(new ProductsTableRendererName());
		cmodel.getColumn(2).setCellRenderer(new ProductsTableRendererCost());
		cmodel.getColumn(3).setCellRenderer(new ProductsTableRendererPrice());
		cmodel.getColumn(4).setCellRenderer(new ProductsTableRendererQty());

		stock = Customer.create(0, "0000", "Bob's Stock", "Bob's Stock");
		Filter();

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        productsTable = new javax.swing.JTable();
        addProduct = new javax.swing.JButton();
        remProduct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        restockProduct = new javax.swing.JButton();
        assign = new javax.swing.JButton();
        graph = new javax.swing.JPanel();

        jScrollPane2.setViewportView(jTextPane1);

        productsTable.setAutoCreateRowSorter(true);
        productsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        productsTable.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                productsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productsTable);

        addProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prototype/addp.PNG"))); // NOI18N
        addProduct.setText("Add new");
        addProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addProductActionPerformed(evt);
            }
        });

        remProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prototype/Untitled.gif"))); // NOI18N
        remProduct.setText("Delete");
        remProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                remProductActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Products overview");

        restockProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prototype/restock.PNG"))); // NOI18N
        restockProduct.setText("Add in stock");
        restockProduct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                restockProductActionPerformed(evt);
            }
        });

        assign.setIcon(new javax.swing.ImageIcon(getClass().getResource("/prototype/rfid.gif"))); // NOI18N
        assign.setText("Assign RFID");
        assign.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                assignActionPerformed(evt);
            }
        });

        graph.setLayout(new javax.swing.BoxLayout(graph, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(restockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(graph, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restockProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assign, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graph, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void productsTableMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_productsTableMouseClicked
    {//GEN-HEADEREND:event_productsTableMouseClicked
        productEdit(evt);
    }//GEN-LAST:event_productsTableMouseClicked

   
    private void restockProductActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_restockProductActionPerformed
    {//GEN-HEADEREND:event_restockProductActionPerformed
        restockProduct();
    }//GEN-LAST:event_restockProductActionPerformed


    private void assignActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_assignActionPerformed
    {//GEN-HEADEREND:event_assignActionPerformed
	assignProduct();
    }//GEN-LAST:event_assignActionPerformed

    private void remProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remProductActionPerformed
	deleteProduct();
    }//GEN-LAST:event_remProductActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
	addProduct();
    }//GEN-LAST:event_addProductActionPerformed
  
    public void addProduct()
{
     JDialog dialog = new JDialog(frame, "Add Product", true);
        ProductInterfaceAdd addp = new ProductInterfaceAdd(dialog, conn);
        dialog.add(addp);
        dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialog.pack();
        dialog.setVisible(true);

        //debug data
//		System.out.println(addp.getProdname());
//		System.out.println(addp.getProdcost());
//		System.out.println(addp.getProdthreshold());

        if (conn.addProduct(addp.getProdname(), addp.getProdcost(), addp.getProdprice(), addp.getProdthreshold()) == null) {
            JOptionPane.showMessageDialog(this, "Unable to create product. Please check the data.", "", JOptionPane.ERROR_MESSAGE);
        }

        tmodel.update();
        tmodel.fireTableDataChanged();
}
    
    public void deleteProduct()
    {
 int row = productsTable.getSelectedRow();
        if (row != -1) {
            row = productsTable.convertRowIndexToModel(row);
            Product c = tmodel.getProduct(row);
            conn.delProduct(c);
            //tries to run the delete query, if it is
            //successfull, then removes the customer object and row
        }

        tmodel.update();
        tmodel.fireTableDataChanged();
    }
    
     public void productEdit(java.awt.event.MouseEvent evt)
{      if (evt.getClickCount() == 2) {
            int row = productsTable.getSelectedRow();
            if (row != -1) {
                row = productsTable.convertRowIndexToModel(row);
                Product product = tmodel.getProduct(row);

                JDialog dialog = new JDialog(frame, "Edit Product", true);
                ProductInterfaceEdit addp = new ProductInterfaceEdit(dialog, conn, product);
                dialog.add(addp);
                dialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                dialog.pack();
                dialog.setVisible(true);

                Product newp = Product.create(product.getProdID(), addp.getProdname(), addp.getProdcost(), addp.getProdprice(), addp.getProdthreshold());
                if (newp != null) {
                    if (!conn.editProduct(newp)) {
                        JOptionPane.showMessageDialog(this, "Unable to edit product. Please check the data.", "", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
            tmodel.update();
            tmodel.fireTableDataChanged();
        } else {
            int row = productsTable.getSelectedRow();
            if (row != -1) {
                row = productsTable.convertRowIndexToModel(row);
                updateGraph(tmodel.getProduct(row));
            }
        }
 
}
     
    public void assignProduct()
    {
		int row = productsTable.getSelectedRow();
        if (row != -1) {
            row = productsTable.convertRowIndexToModel(row);
            Product p = tmodel.getProduct(row);
            //here it shall wait for a rfid tag, and then update the product record with the tag ID
			String rfid = JOptionPane.showInputDialog(this, "Type in the HEX dump of the cards datablock", "Assign Product to chips", JOptionPane.PLAIN_MESSAGE);
			if(rfid.length()==32)
			{
				conn.editProductRFID(p, rfid);
			}
        }
        tmodel.update();
        tmodel.fireTableDataChanged();
   }
    
    public void restockProduct()
{		
    int row = productsTable.getSelectedRow();
		if (row != -1) {
			int qty;
			try {
				qty = Integer.parseInt(JOptionPane.showInputDialog("Type in the quantity:"));
			} catch (NumberFormatException e) {
				qty = 0;
			}
			if (qty > 0) {
				row = productsTable.convertRowIndexToModel(row);
				Product p = tmodel.getProduct(row);
				ArrayList<Purchase> r = new ArrayList();
				r.add(Purchase.create(p, qty, Purchase.FlowDirection.RESTOCK));
				conn.addReceipt(stock, r, new Date());
			}
		}
		tmodel.update();
		tmodel.fireTableDataChanged();
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JButton assign;
    private javax.swing.JPanel graph;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTable productsTable;
    private javax.swing.JButton remProduct;
    private javax.swing.JButton restockProduct;
    // End of variables declaration//GEN-END:variables

	private void Filter()
	{
		RowFilter<ProductsTableModel, Integer> activeFilter = new RowFilter<ProductsTableModel, Integer>()
		{
			@Override
			public boolean include(RowFilter.Entry<? extends ProductsTableModel, ? extends Integer> entry)
			{
				ProductsTableModel model = entry.getModel();
				Product a = model.getProduct(entry.getIdentifier());
				return (a.getProdID() != 0);
			}
		};
		sort.setRowFilter(activeFilter);
	}

	private void updateGraph(Product p)
	{
		ArrayList<Integer> values;
		values = conn.getProductTrend(p);

		JPanel inGraph = new GraphLine(values, null);
		graph.removeAll();
		graph.add(inGraph);
		inGraph.setVisible(true);
		graph.setVisible(true);
		graph.revalidate();
	}
	
	
}